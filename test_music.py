import numpy as np
from tensorflow.keras.models import load_model
from music21 import *
import joblib


X_seed = joblib.load('seed.joblib')
reverse_mapping = {
0: '0',
 1: '0.1',
 2: '0.2',
 3: '0.2.5',
 4: '0.2.6',
 5: '0.3',
 6: '0.3.5',
 7: '0.3.6',
 8: '0.3.6.9',
 9: '0.3.7',
 10: '0.4',
 11: '0.4.5',
 12: '0.4.6',
 13: '0.4.7',
 14: '0.5',
 15: '0.5.6',
 16: '0.6',
 17: '1',
 18: '1.2',
 19: '1.2.3',
 20: '1.2.4.5',
 21: '1.2.4.8',
 22: '1.3',
 23: '1.3.6',
 24: '1.3.7',
 25: '1.3.8',
 26: '1.4',
 27: '1.4.6',
 28: '1.4.7',
 29: '1.4.7.10',
 30: '1.5',
 31: '1.5.6',
 32: '1.5.8',
 33: '1.6',
 34: '1.7',
 35: '10',
 36: '10.0',
 37: '10.0.3.6',
 38: '10.0.4',
 39: '10.0.5',
 40: '10.1',
 41: '10.1.3',
 42: '10.1.4',
 43: '10.1.5',
 44: '10.11',
 45: '10.2',
 46: '10.2.5',
 47: '10.3',
 48: '11',
 49: '11.0',
 50: '11.0.2',
 51: '11.0.2.3',
 52: '11.0.4',
 53: '11.1',
 54: '11.1.5',
 55: '11.1.6',
 56: '11.2',
 57: '11.2.5',
 58: '11.2.6',
 59: '11.3',
 60: '11.3.5',
 61: '11.3.6',
 62: '11.4',
 63: '2',
 64: '2.3',
 65: '2.3.5',
 66: '2.4',
 67: '2.4.5',
 68: '2.4.7',
 69: '2.4.8',
 70: '2.5',
 71: '2.5.8',
 72: '2.5.8.10',
 73: '2.5.9',
 74: '2.6',
 75: '2.6.10',
 76: '2.6.8',
 77: '2.6.9',
 78: '2.7',
 79: '2.8',
 80: '3',
 81: '3.4',
 82: '3.5',
 83: '3.5.8',
 84: '3.5.9',
 85: '3.6',
 86: '3.6.10',
 87: '3.6.8',
 88: '3.6.9',
 89: '3.7',
 90: '3.7.10',
 91: '3.7.8',
 92: '3.8',
 93: '3.9',
 94: '4',
 95: '4.10',
 96: '4.5',
 97: '4.5.7',
 98: '4.6',
 99: '4.6.10',
 100: '4.6.11',
 101: '4.6.9',
 102: '4.7',
 103: '4.7.10',
 104: '4.7.11',
 105: '4.7.9',
 106: '4.8',
 107: '4.8.11',
 108: '4.9',
 109: '5',
 110: '5.10',
 111: '5.10.11',
 112: '5.11',
 113: '5.6',
 114: '5.6.8.9',
 115: '5.7',
 116: '5.7.0',
 117: '5.7.10',
 118: '5.8',
 119: '5.8.0',
 120: '5.8.10',
 121: '5.8.11',
 122: '5.8.11.1',
 123: '5.9',
 124: '5.9.0',
 125: '5.9.11',
 126: '6',
 127: '6.10',
 128: '6.10.0',
 129: '6.10.1',
 130: '6.11',
 131: '6.7',
 132: '6.7.0',
 133: '6.8',
 134: '6.8.0',
 135: '6.8.1',
 136: '6.8.10.2',
 137: '6.8.11',
 138: '6.8.11.2',
 139: '6.9',
 140: '6.9.0',
 141: '6.9.0.2',
 142: '6.9.1',
 143: '7',
 144: '7.0',
 145: '7.10',
 146: '7.10.1',
 147: '7.10.1.3',
 148: '7.10.2',
 149: '7.11',
 150: '7.11.2',
 151: '7.8',
 152: '7.8.0',
 153: '7.8.1',
 154: '7.8.10.11',
 155: '7.8.11',
 156: '7.9',
 157: '8',
 158: '8.0',
 159: '8.0.3',
 160: '8.1',
 161: '8.10',
 162: '8.10.1',
 163: '8.10.1.3',
 164: '8.10.2',
 165: '8.10.3',
 166: '8.11',
 167: '8.11.1',
 168: '8.11.2',
 169: '8.11.2.3',
 170: '8.11.2.4',
 171: '8.11.3',
 172: '8.9',
 173: '8.9.11.0',
 174: '8.9.11.3',
 175: '8.9.2',
 176: '9',
 177: '9.0',
 178: '9.0.1',
 179: '9.0.3',
 180: '9.0.3.5',
 181: '9.0.4',
 182: '9.1',
 183: '9.1.4',
 184: '9.10',
 185: '9.11',
 186: '9.11.3',
 187: '9.11.4',
 188: '9.2',
 189: '9.2.3',
 190: 'A1',
 191: 'A2',
 192: 'A3',
 193: 'A4',
 194: 'A5',
 195: 'A6',
 196: 'B-1',
 197: 'B-2',
 198: 'B-3',
 199: 'B-4',
 200: 'B-5',
 201: 'B-6',
 202: 'B1',
 203: 'B2',
 204: 'B3',
 205: 'B4',
 206: 'B5',
 207: 'B6',
 208: 'C#2',
 209: 'C#3',
 210: 'C#4',
 211: 'C#5',
 212: 'C#6',
 213: 'C#7',
 214: 'C2',
 215: 'C3',
 216: 'C4',
 217: 'C5',
 218: 'C6',
 219: 'C7',
 220: 'D1',
 221: 'D2',
 222: 'D3',
 223: 'D4',
 224: 'D5',
 225: 'D6',
 226: 'D7',
 227: 'E-1',
 228: 'E-2',
 229: 'E-3',
 230: 'E-4',
 231: 'E-5',
 232: 'E-6',
 233: 'E-7',
 234: 'E1',
 235: 'E2',
 236: 'E3',
 237: 'E4',
 238: 'E5',
 239: 'E6',
 240: 'E7',
 241: 'F#1',
 242: 'F#2',
 243: 'F#3',
 244: 'F#4',
 245: 'F#5',
 246: 'F#6',
 247: 'F1',
 248: 'F2',
 249: 'F3',
 250: 'F4',
 251: 'F5',
 252: 'F6',
 253: 'F7',
 254: 'G#1',
 255: 'G#2',
 256: 'G#3',
 257: 'G#4',
 258: 'G#5',
 259: 'G#6',
 260: 'G1',
 261: 'G2',
 262: 'G3',
 263: 'G4',
 264: 'G5',
 265: 'G6'}

model = load_model('musicgen_model.h5', compile=False)
length = 40
    
def chords_n_notes(Snippet):
    Melody = []
    offset = 0 
    for i in Snippet:
        
        if ("." in i or i.isdigit()):
            chord_notes = i.split(".") 
            notes = [] 
            for j in chord_notes:
                inst_note=int(j)
                note_snip = note.Note(inst_note)            
                notes.append(note_snip)
                chord_snip = chord.Chord(notes)
                chord_snip.offset = offset
                Melody.append(chord_snip)
        # pattern is a note
        else: 
            note_snip = note.Note(i)
            note_snip.offset = offset
            Melody.append(note_snip)
        
        offset += 1
    Melody_midi = stream.Stream(Melody)   
    return Melody_midi

def Malody_Generator(Note_Count):
    seed = X_seed[np.random.randint(0,len(X_seed)-1)]
    Music = ""
    Notes_Generated=[]
    for i in range(Note_Count):
        seed = seed.reshape(1,length,1)
        prediction = model.predict(seed, verbose=0)[0]
        prediction = np.log(prediction) / 1.0
        exp_preds = np.exp(prediction)
        prediction = exp_preds / np.sum(exp_preds)
        index = np.argmax(prediction)
        index_N = index/ float(266)
        Notes_Generated.append(index)
        Music = [reverse_mapping[char] for char in Notes_Generated]
        seed = np.insert(seed[0],len(seed[0]),index_N)
        seed = seed[1:]
    
    Melody = chords_n_notes(Music)
    Melody_midi = stream.Stream(Melody)   
    output_file = 'generated.midi'
    Melody_midi.write('midi', output_file)
    return Music,Melody_midi, output_file



# Music_notes, Melody, _ = Malody_Generator(100)
